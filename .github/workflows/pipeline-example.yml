name: Customer Service API pipeline
on:
  push:
    branches:
      - main
    paths:
      - src/**
      - .github/workflows/**
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'pom.xml'
jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile Project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-dept: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Compile project
        run: |
          ./mvnw clean compile
      # cd spring-with-github-actions
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-dept: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Running Unit Test
        run: |
          ./mvnw clean test
      # cd spring-with-github-actions

  build:
    runs-on: ubuntu-latest
    name: Build Project
    needs: [compile,unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-dept: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Build Project
        run: |
          ./mvnw clean package
      # cd spring-with-github-actions

  

  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-dept: 0
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'
      - name: Extract Project Version
        id: extract_version
        run: |
          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT
      # cd spring-with-github-actions
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build And Push Dockerhub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/customer-service:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/customer-service:latest
          build-args: |
            APP_VERSION= ${{ steps.extract_version.outputs.VERSION }}
            
      

  ### deploy